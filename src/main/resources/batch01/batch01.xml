<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
    xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/batch 
http://www.springframework.org/schema/batch/spring-batch-3.0.xsd 
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <context:component-scan base-package="batch01" /> 

    <!--第一步： 获得 transactionManager-->
    <bean:bean id="transactionManager"  
        class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">  
    </bean:bean>
    
    <!--第二步： 获得 jobRepository-->
    <bean:bean id="jobRepository"  
        class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">  
        <bean:property name="transactionManager" ref="transactionManager" />  
    </bean:bean>  
    
     <!--第三步： 获得 jobLauncher-->
    <bean:bean id="jobLauncher"  
        class="org.springframework.batch.core.launch.support.SimpleJobLauncher">  
        <bean:property name="jobRepository" ref="jobRepository" />  
    </bean:bean> 



    <job id="xmlFileReadAndWriterJob">
        <step id="xmlFileReadAndWriterStep">
            <tasklet>
                <chunk reader="xmlReader" writer="xmlWriter" processor="xmlProcessor"
                    commit-interval="10">
                </chunk>
            </tasklet>
        </step>
    </job>

<!--     XML文件读取 -->
    <bean:bean id="xmlReader"
        class="org.springframework.batch.item.xml.StaxEventItemReader" scope="step">
        <bean:property name="fragmentRootElementName" value="goods" />
        <bean:property name="unmarshaller" ref="tradeMarshaller" />
        <bean:property name="resource"
            value="file:#{jobParameters['inputFilePath']}"></bean:property>
    </bean:bean>

<!--     XML文件写入 -->
    <bean:bean id="xmlWriter"
        class="org.springframework.batch.item.xml.StaxEventItemWriter" scope="step">
        <bean:property name="rootTagName" value="wanggc" />
        <bean:property name="marshaller" ref="tradeMarshaller" />
        <bean:property name="resource"
            value="file:#{jobParameters['outputFilePath']}" />
    </bean:bean>

    <bean:bean id="tradeMarshaller"
        class="org.springframework.oxm.xstream.XStreamMarshaller">
        <bean:property name="aliases">
            <util:map id="aliases">
                <bean:entry key="goods"
                    value="batch01.Goods" />
                <bean:entry key="buyDay" value="java.util.Date"></bean:entry>
            </util:map>
        </bean:property>
    </bean:bean>
</bean:beans>